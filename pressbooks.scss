$breakpoints: (
  'sm': 40rem,
  'md': 48rem,
  'lg': 64rem,
  'xl': 80rem,
  '2xl': 96rem,
);

$shadow-values: (
  '2xs': 0 1px rgb(0, 0, 0, 0.05),
  'xs': 0 1px 2px 0 rgb(0, 0, 0, 0.05),
  'sm': (0 1px 3px 0 rgb(0, 0, 0, 0.1),
    0 1px 2px -1px rgb(0, 0, 0, 0.1)),
  'md': (0 4px 6px -1px rgb(0, 0, 0, 0.1),
    0 2px 4px -2px rgb(0, 0, 0, 0.1)),
  'lg': (0 10px 15px -3px rgb(0, 0, 0, 0.1),
    0 4px 6px -4px rgb(0, 0, 0, 0.1)),
  'xl': (0 20px 25px -5px rgb(0, 0, 0, 0.1),
    0 8px 10px -6px rgb(0, 0, 0, 0.1)),
  '2xl': 0 25px 50px -12px rgb(0, 0, 0, 0.25),
  'inner': inset 0 2px 4px 0 rgb(0, 0, 0, 0.06),
  'none': 0 0 #0000,
);

$shadow-inset-values: (
  'xs': inset 0 1px 2px 0 rgb(0, 0, 0, 0.05),
  'sm': inset 0 1px 3px 0 rgb(0, 0, 0, 0.1),
  'none': inset 0 0 #0000,
);

$radius-values: (
  'none': 0,
  'xs': 0.125rem,
  'sm': 0.25rem,
  'md': 0.375rem,
  'lg': 0.5rem,
  'xl': 0.75rem,
  '2xl': 1rem,
  '3xl': 1.5rem,
  'full': calc(infinity * 1px),
);

$display-values: (
  'block': block,
  'inline': inline,
  'inline-block': inline-block,
  'flex': flex,
  'grid': grid,
  'none': none,
);

$justify-content-values: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'between': space-between,
  'around': space-around,
  'evenly': space-evenly,
);

$align-items-values: (
  'start': flex-start,
  'end': flex-end,
  'center': center,
  'stretch': stretch,
  'baseline': baseline,
);

$justify-self-values: (
  auto: auto,
  start: start,
  end: end,
  center: center,
  stretch: stretch,
);

$text-align-values: (
  'left': left,
  'center': center,
  'right': right,
  'justify': justify,
  'start': start,
  'end': end,
);

$flex-direction-values: (
  'row': row,
  'row-reverse': row-reverse,
  'col': column,
  'col-reverse': column-reverse,
);

$unit-values: (
  'auto': auto,
  '0': 0,
  '1': 0.25rem,
  '2': 0.5rem,
  '3': 0.75rem,
  '4': 1rem,
  '5': 1.25rem,
  '6': 1.5rem,
  '8': 2rem,
  '10': 2.5rem,
  '12': 3rem,
);

$pixel-values: (
  '0': 0,
  '1': 1px,
  '2': 2px,
  '4': 4px,
  '5': 5px,
  '6': 6px,
  '7': 7px,
  '8': 8px,
  '9': 9px,
  '10': 10px,
);

$overflow-values: (
  'auto': auto,
  'hidden': hidden,
  'visible': visible,
  'scroll': scroll,
);

$grid-cols-values: (
  '1': repeat(1, minmax(0, 1fr)),
  '2': repeat(2, minmax(0, 1fr)),
  '3': repeat(3, minmax(0, 1fr)),
  '4': repeat(4, minmax(0, 1fr)),
);

$pseudo-classes: (
  'hover': ':hover',
  'focus': ':focus',
  'active': ':active',
  'visited': ':visited',
  'focus-within': ':focus-within',
  'focus-visible': ':focus-visible',
);

$font-weight-values: (
  'thin': 100,
  'extralight': 200,
  'light': 300,
  'normal': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700,
  'extrabold': 800,
  'black': 900,
);

$blur-values: (
  'xs': blur(4px),
  'sm': blur(8px),
  'md': blur(16px),
  'lg': blur(24px),
  'xl': blur(40px),
  '2xl': blur(64px),
  '3xl': blur(96px),
  'none': none,
);

$cursor-values: (
  'auto': auto,
  'default': default,
  'pointer': pointer,
  'wait': wait,
  'text': text,
  'move': move,
  'not-allowed': not-allowed,
  'grab': grab,
  'grabbing': grabbing,
);

$transition-values: (
  'all': all cubic-bezier(0.4, 0, 0.2, 1) 300ms,
);

$transition-timing-values: (
  'linear': linear,
  'in': cubic-bezier(0.4, 0, 1, 1),
  'out': cubic-bezier(0, 0, 0.2, 1),
  'in-out': cubic-bezier(0.4, 0, 0.2, 1),
  'initial': initial,
);

$transition-unit-values: (
  '150': 150ms,
  '300': 300ms,
  '500': 500ms,
  '700': 700ms,
  '1000': 1000ms,
);

$list-style-values: (
  'none': none,
  'disc': disc,
  'circle': circle,
  'square': square,
  'decimal': decimal,
  'decimal-leading-zero': decimal-leading-zero,
  'lower-roman': lower-roman,
  'upper-roman': upper-roman,
  'lower-alpha': lower-alpha,
  'upper-alpha': upper-alpha,
);

$text-transform-values: (
  'uppercase': uppercase,
  'lowercase': lowercase,
  'capitalize': capitalize,
  'normal-case': none,
);

$colors: (
  'white': #fff,
  'learning-obj': #c5bdaa,
  'try-it': #3c2a21,
  'example': #eae8d7,
  'challenge-question': #eae8d7,
  'accordion': #f0f0f0,
  'transparent': transparent,
  'black': #000,
  'blur-box': #f9f9f9,
  'blur-text': #333,
  'table-head': #ebef98,
  'example-box':#eae8d7,
  'key-takeaways':#f79750,
  'alternates-two':#FECE98,
  'box-headers':#414042,
  'picture-background':#454546,
);

$width-values: (
  "1-2": 50%,
  "1-3": 33.3333%,
  "2-3": 66.6667%,
  "1-4": 25%,
  "2-4": 50%,
  "3-4": 75%,
  "1-5": 20%,
  "2-5": 40%,
  "3-5": 60%,
  "4-5": 80%,
  "1-10":10%,
  "full": 100%,
  "auto": auto,
  "min": min-content,
  "max": max-content,
  "0": 0,
  "px": 1px,
  "0.5": 0.125rem,
  "1": 0.25rem,
  "2": 0.5rem,
  "4": 1rem,
  "8": 2rem,
  "10": 2.5rem,
  "16": 4rem,
  "20": 5rem,
  "24": 6rem,
  "32": 8rem,
  "40": 10rem,
  "48": 12rem,
  "56": 14rem,
  "64": 16rem,
  "96": 24rem,
);

$height-values: (
  'min': min-content,
  'max': max-content,
  'fit': fit-content,
  '100': 100%,
  '90': 90%,
  '80': 80%,
  '70': 70%,
  '60': 60%,
  '50': 50%,
  'auto':auto,
);

$font-size-values: (
  'xs': 0.75rem,
  'sm': 0.875rem,
  'base': 1rem,
  'lg': 1.125rem,
  'xl': 1.25rem,
  '2xl': 1.5rem,
  '3xl': 1.875rem,
  '4xl': 2.25rem,
  '5xl': 3rem,
  '6xl': 3.75rem,
  '7xl': 4.5rem,
  '8xl': 6rem,
  '9xl': 8rem,
);

$line-styles:(
  'solid':solid,
  'dashed':dashed,
);

//  NOTE: the php-sass compiler automatically removes backslashes from its output,
// so we need to double-escape the double backslash
$important-suffix: "\\\\!";

@mixin generate-utilities($property-prefix, $property, $values) {
  @each $name, $value in $values {
    .#{$property-prefix}-#{$name} {
      @each $prop in $property {
        #{$prop}: $value;
      }
    }

    .#{$property-prefix}-#{$name}#{$important-suffix} {
      @each $prop in $property {
        #{$prop}: $value !important;
      }
    }

    @each $breakpoint-key, $breakpoint-value in $breakpoints {
      .#{$breakpoint-key}\\:#{$property-prefix}-#{$name} {
        @media (min-width: $breakpoint-value) {
          @each $prop in $property {
            #{$prop}: $value;
          }
        }
      }

      .#{$breakpoint-key}\\:#{$property-prefix}-#{$name}#{$important-suffix} {
        @media (min-width: $breakpoint-value) {
          @each $prop in $property {
            #{$prop}: $value !important;
          }
        }
      }
    }

    @each $pseudo-key, $pseudo-value in $pseudo-classes {
      .#{$pseudo-key}\\:#{$property-prefix}-#{$name} {
        &#{$pseudo-value} {
          @each $prop in $property {
            #{$prop}: $value;
          }
        }
      }

      .#{$pseudo-key}\\:#{$property-prefix}-#{$name}#{$important-suffix} {
        &#{$pseudo-value} {
          @each $prop in $property {
            #{$prop}: $value !important;
          }
        }
      }

      @each $breakpoint-key, $breakpoint-value in $breakpoints {
        .#{$breakpoint-key}\\:#{$pseudo-key}\\:#{$property-prefix}-#{$name}:#{$pseudo-key} {
          @media (min-width: $breakpoint-value) {
            @each $prop in $property {
              #{$prop}: $value;
            }
          }
        }

        .#{$breakpoint-key}\\:#{$pseudo-key}\\:#{$property-prefix}-#{$name}#{$important-suffix}:#{$pseudo-key} {
          @media (min-width: $breakpoint-value) {
            @each $prop in $property {
              #{$prop}: $value !important;
            }
          }
        }
      }
    }
  }
}

@include generate-utilities('display', 'display', $display-values);
@include generate-utilities('justify', 'justify-content', $justify-content-values);
@include generate-utilities('justify-self', 'justify-self', $justify-self-values);
@include generate-utilities('align-self', 'align-self', $align-items-values);
@include generate-utilities('grid-cols', 'grid-template-columns', $grid-cols-values);
@include generate-utilities('align', 'align-items', $align-items-values);
@include generate-utilities('flex', 'flex-direction', $flex-direction-values);
@include generate-utilities('flex', 'flex-wrap', ('wrap': wrap, 'wrap-reverse': wrap-reverse, 'nowrap': nowrap));
@include generate-utilities('m', 'margin', $unit-values);
@include generate-utilities('mx', 'margin-inline', $unit-values);
@include generate-utilities('my', 'margin-block', $unit-values);
@include generate-utilities('mb', 'margin-bottom', $unit-values);
@include generate-utilities('mt', 'margin-top', $unit-values);
@include generate-utilities('ml', 'margin-left', $unit-values);
@include generate-utilities('mr', 'margin-right', $unit-values);
@include generate-utilities('p', 'padding', $unit-values);
@include generate-utilities('pb', 'padding-bottom', $unit-values);
@include generate-utilities('pt', 'padding-top', $unit-values);
@include generate-utilities('pl', 'padding-left', $unit-values);
@include generate-utilities('pr', 'padding-right', $unit-values);
@include generate-utilities('px', 'padding-inline', $unit-values);
@include generate-utilities('py', 'padding-block', $unit-values);
@include generate-utilities('gap', 'gap', $unit-values);
@include generate-utilities('gap-x', 'column-gap', $unit-values);
@include generate-utilities('gap-y', 'row-gap', $unit-values);
@include generate-utilities('indent', 'text-indent', $unit-values);
@include generate-utilities('border', 'border-width', $pixel-values);
@include generate-utilities('border-r', 'border-right-width', $pixel-values);
@include generate-utilities('border-l', 'border-left-width', $pixel-values);
@include generate-utilities('border-b', 'border-bottom-width', $pixel-values);
@include generate-utilities('border-t', 'border-top-width', $pixel-values);
@include generate-utilities('border', 'border-color', $colors);
@include generate-utilities('border', 'border-style', $line-styles);
@include generate-utilities('rounded', 'border-radius', $radius-values);
@include generate-utilities('rounded-t', ('border-top-left-radius', 'border-top-right-radius'), $radius-values);
@include generate-utilities('rounded-r', ('border-top-right-radius', 'border-bottom-right-radius'), $radius-values);
@include generate-utilities('rounded-l', ('border-top-left-radius', 'border-bottom-left-radius'), $radius-values);
@include generate-utilities('rounded-b', ('border-bottom-left-radius', 'border-bottom-right-radius'), $radius-values);
@include generate-utilities('shadow', 'box-shadow', $shadow-values);
@include generate-utilities('inset-shadow', 'box-shadow', $shadow-inset-values);
@include generate-utilities('font', 'font-weight', $font-weight-values);
@include generate-utilities('text', 'text-align', $text-align-values);
@include generate-utilities('text', 'font-size', $font-size-values);
@include generate-utilities('text', 'text-transform', $text-transform-values);
@include generate-utilities('blur', 'filter', $blur-values);
@include generate-utilities('cursor', 'cursor', $cursor-values);
@include generate-utilities('transition', 'transition', $transition-values);
@include generate-utilities('duration', 'transition-duration', $transition-unit-values);
@include generate-utilities('delay', 'transition-delay', $transition-unit-values);
@include generate-utilities('ease', 'transition-timing-function', $transition-values);
@include generate-utilities('list', 'list-style-type', $list-style-values);
@include generate-utilities('overflow', 'overflow', $overflow-values);
@include generate-utilities('overflow-x', 'overflow-x', $overflow-values);
@include generate-utilities('overflow-y', 'overflow-y', $overflow-values);
@include generate-utilities('color', 'color', $colors);
@include generate-utilities('background', 'background-color', $colors);
@include generate-utilities('w', 'width', $width-values);
@include generate-utilities('h', 'height', $height-values);
@include generate-utilities('pos', 'position', ('static': static, 'relative': relative, 'absolute': absolute, 'fixed': fixed, 'sticky': sticky));
@include generate-utilities('top', 'top', $unit-values);
@include generate-utilities('right', 'right', $unit-values);
@include generate-utilities('bottom', 'bottom', $unit-values);
@include generate-utilities('left', 'left', $unit-values);
@include generate-utilities('max-w', 'max-width', $width-values);


/* Global Styles */
*,
:after,
:before,
::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}

//  NOTE: Increase the `font-size` of mathjax fraction element
.mjx-mfrac {
  font-size: 1.5rem;
}

/* Alternates Box*/
div.customboxncc {
  margin-bottom: 5px;
  padding: 0em 0em 0.5em 0em;
  border-radius: 10px;
  /* Rounded corners */
  border-style: none;
  /* Remove the border */
  border-width: 0;
  /* No border width */
  color: #000;
  background: #ffffff;
  /* Set the background to white */
  margin-top: 20px;
  /* Retain your custom margin-top */
  box-shadow:
    -0.5px 0 0 rgba(0, 0, 0, 0.1),
    /* Left shadow */
    0.5px 0 0 rgba(0, 0, 0, 0.1),
    /* Right shadow */
    0 4px 6px rgba(0, 0, 0, 0.1);
  /* soft general shadow */
}

/* Alternates Box Header*/
.customboxncc>.customboxncc_header {
  background: #FECE98;
  /* Match exercises header background */
  border-style: none;
  /* Remove the border */
  border-width: 0;
  /* No border width */
  border-top-left-radius: 10px;
  /* Top-left corner rounding */
  border-top-right-radius: 10px;
  /* Top-right corner rounding */
  margin: 0;
  /* Reset margin */
  padding: 0.6em 1.2em 0.6em 1.2em;
  /* Consistent padding */
  font-style: none;
  font-size: 1.2em;
  text-align: left;
}

.customboxncc>.customboxncc_header p {
  text-indent: 0;
}

.customboxncc>.customboxncc_content {
  margin: 0;
  padding: 1.7777777778em 1.7777777778em 1.7777777778em 1.7777777778em;
  /* Add content padding */
  padding-bottom: 5px;
  /* Add extra bottom padding for spacing */
}

.customboxncc>.customboxncc_header>.customboxncc_title {
  color: #414042;
}

.textbox.shaded,
.shaded.bcc-box,
.textbox.examples,
.examples.bcc-box {
  border-radius: 10px;
}

/*Alternate Box remove bottom border*/
section.chapter header:not(.textbox__header),
section.front-matter header:not(.textbox__header),
section.back-matter header:not(.textbox__header) {
  border-bottom: 0;
}

/*exercises box*/
.textbox.textbox--exercises .textbox__header,
.textbox--exercises.bcc-box .textbox__header {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  font-size: 1.2em;
  padding: 0.6em 1.2em 0.6em 1.2em;
  /* Consistent padding */
}

.textbox.textbox--exercises,
.textbox--exercises.bcc-box {
  border-radius: 10px;
  box-shadow:
    -0.5px 0 0 rgba(0, 0, 0, 0.1),
    /* Left shadow */
    0.5px 0 0 rgba(0, 0, 0, 0.1),
    /* Right shadow */
    0 4px 6px rgba(0, 0, 0, 0.1);
  /* soft general shadow */
}

/*example box*/
.textbox.textbox--examples .textbox__header,
.textbox--examples.bcc-box .textbox__header {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  font-size: 1.2em;
  padding: 0.6em 1.2em 0.6em 1.2em;
  /* Consistent padding */

}

.textbox.textbox--examples,
.textbox--examples.bcc-box {
  border-radius: 10px;
  box-shadow:
    -0.5px 0 0 rgba(0, 0, 0, 0.1),
    0.5px 0 0 rgba(0, 0, 0, 0.1),
    0 4px 6px rgba(0, 0, 0, 0.1);
}

/*general textboxes*/
.textbox,
.bcc-box {
  border-radius: 10px;
}

/*takeaways box*/
.textbox.textbox--key-takeaways .textbox__header,
.textbox--key-takeaways.bcc-box .textbox__header {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  font-size: 1.2em;
  padding: 0.6em 1.2em 0.6em 1.2em;
  /* Consistent padding */
}

.textbox.textbox--key-takeaways,
.textbox--key-takeaways.bcc-box {
  border-radius: 10px;
  box-shadow:
    -0.5px 0 0 rgba(0, 0, 0, 0.1),
    /* Left shadow */
    0.5px 0 0 rgba(0, 0, 0, 0.1),
    /* Right shadow */
    0 4px 6px rgba(0, 0, 0, 0.1);
  /* soft general shadow */
}

.special_exercises {
  border-left-color: #3c2a21;
  border-left-width: 8px;
  background-color: #FFFFFF;
}

.special_lo {
  border-left-color: #c5bdaa;
  border-left-width: 8px;
  background-color: #FFFFFF;
}

.special_kt {
  border-left-color: #f79750;
  border-left-width: 8px;
  background-color: #FFFFFF;
}

.special_example {
  border-left-color: #eae8d7;
  border-left-width: 8px;
  background-color: #FFFFFF;
}

.special_a {
  border-left-color: #fece98;
  border-left-width: 8px;
  background-color: #FFFFFF;
}

/* cyvergara - stylings: blurred answer. */
.center-screen {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  margin-top: 13px;
  margin-bottom: 18px;
}

.container {
  font-family: Arial, sans-serif;
  display: inline-block;
  padding: 15px;
  border-radius: 10px;
  background-color: #f9f9f9;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.practice-container {
  font-family: Arial, sans-serif;
  display: inline-block;
  padding: 15px;
  border-radius: 10px;
  background-color: #f9f9f9;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.solution {
  color: #333;
  filter: blur(5px);
  transition: filter 0.3s ease;
  cursor: pointer;
  text-align: left;
}

.solution:hover {
  filter: blur(0);
}

.latex-center {
  text-align: center;
  /* Center only LaTeX elements */
}

/* upper bar color*/
.cta {
  background-color: #D4DF38;
  color: #000000;
  text-align: right;
}

.front-matter .wp-caption.aligncenter .wp-caption-text,
.front-matter .wp-nocaption.aligncenter .wp-caption-text,
.part .wp-caption.aligncenter .wp-caption-text,
.part .wp-nocaption.aligncenter .wp-caption-text,
.chapter .wp-caption.aligncenter .wp-caption-text,
.chapter .wp-nocaption.aligncenter .wp-caption-text,
.back-matter .wp-caption.aligncenter .wp-caption-text,
.back-matter .wp-nocaption.aligncenter .wp-caption-text {
  text-align: center;
  font-style: normal;
}

/* makes the text for the previous/next buttons in the webbook bigger */
.nav-reading__next a,
.nav-reading__previous a {
  font-size: .99rem !important;
}

/*Text color in the lower bar @Ulf**/
.nav-reading__next a,
.nav-reading__previous a {
  border: 1px solid transparent;
  color: #414042;
  display: block;
  font-family: Karla, sans-serif;
  font-size: 0.99rem;
  height: 100%;
  padding: 0.5rem 1rem;
  font-weight: bold;
  transition: color 0.3s;
  /*hover effect added */
}

.nav-reading__next,
.nav-reading__previous {
  color: unset;
}

.nav-reading__next a:hover,
.nav-reading__previous a:hover {
  color: #FFFFFF;
  /* hover color changed @Ulf**/
  background-color: rgba(65, 64, 66, 0.8);
}

.nav-reading__next a:focus,
.nav-reading__previous a:focus {
  border: #414042;
  outline: none;
}

/* lower bar bg color */
.nav-reading {
  background-color: #D4DF38;
  bottom: 0;
  display: block;
  left: 0;
  position: fixed;
  width: 100%;
}

.mjx-mfrac {
  font-size: 25px;
}

/* Accordions on Look and Feel*/

details>summary {
  padding: 10px 10px;
  font-size: 1.0em;
  font-weight: bold;
  background-color: #F0F0F0;
  color: var(--color-one);
  border: 2px solid var(--color-one);
  cursor: pointer;
  border-radius: 10px 10px 10px 10px;
}

details[open]>summary {
  background-color: #f79750;
  color: #000000;
}

.collapsed {
  border-radius: 10px 10px 10px 10px;
  background-color: #F0F0F0;
  padding: 20px 20px;
  margin-bottom: 15px;
}

/* # The Sliding Summary # */
@keyframes details-show {
  from {
    opacity: 0;
    transform: var(--details-translate, translateY(-0.5em));
  }
}

details[open]>*:not(summary) {
  animation: details-show 750ms ease-in-out;
}

/* End: Accordion */
/* Icons - juan p. amorocho*/
.icon_large {
  width: 85px;
  height: 85px;
}

/* special textboxes with icon image on left side - stylings. */

.special_flex_container {
  border: none;
  display: flex;
  flex-direction: row;
  flex-wrap: none;
}

.special_flex_textblock {
  order: 2;
  width: 90%;
  background-color: #FFFFFF;
  border-radius: 0px 10px 10px 0px;
  border-width: 0.05em 0.05em 0.05em 0;
}

.flex_colorblock {
  order: 1;
  width: 10%;
  background-color: #454546;
  padding: 0em;
  text-align: center;
  white-space: nowrap;
  border-radius: 10px 0px 0px 10px;
  border-style: none;
}

.img_helper_verticalmiddle {
  height: 100%;
  vertical-align: middle;
  display: inline-block;
}

img.verticalmiddle {
  vertical-align: middle;
}

img.circleicon {
  padding-top: 50px;
  padding-right: 15px;
}

.aligncenter {
  text-align: center;
  vertical-align: middle;
}

.shaded {
  background-color: #ebef98;
}
